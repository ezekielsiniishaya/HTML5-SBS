<!DOCTYPE html>
<html>
<head>
<title>
CPT111 Assignment 1</title>
</head>
<body>
<h1>Introduction to Computer Science (CPT 111)</h1>
<h3>Assignment One<br>2022/1/84744ET</h3>
<p>Question One</p>
<ol>Unsigned Integers (often called "units") are just like integers (whole
numbers) but have the property that they don't have a plus (+) or minus (-)
sign associated with them. Thus, they are always non-negative (zero or
positive). We use units when we know the value, we are counting will always
be non-negative. For example, if we are counting the number of players in a
game, we could use a unit because there will always be 0 or more players.</ol>
<p>Question Two</p>
<ol>The signed integer represents both negative and positive numbers. This is in
contrast to an unsigned integer which can only represent positive numbers.
For example, a signed integer can represent -25 and 25.</ol>
Question Three
<ol>In general, by using n bits we are able to represent up to 2
n different values.<ul><li>. An n-bit unsigned integer represents 2^n
values: from 0 to 2^(n-1)
-1.</li><li> Using n bits, the range of numbers that can be represented is from -(2^(n
-1)-1) to (2^(n-1)
-1).</li></ol>
<p><a name="Question Others"><h2>Question Others</h2></a>
<ol>With 6 bit you can represent 64 unsigned integers which are: 0, 1, 2, 3, 4, 5,
6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,26, 27,
28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63
5. The signed integers that can be represented with 6bits using sign-magnitude
method are:-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-17,-16,-
15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,-
0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27
,28,29,30,31.
6. The signed integers that can be represented with 6bits using 1's complement
representation are: 31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-21,-20,-19,-18,-
17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,-
0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27
,28,29,30,31.
7. First, I convert the signed numbers -7 and +3 to binary which will be 10111
and 00011 in 5bits respectively. The first compliment of 10111 and 00011 are
01000 and 00011 respectively with no change to the 00011 because it is a
positive. Adding the two last numbers will give 01011.
8. Here, I just add the integers 7 and 3 in binary which are 0111 and 0011
respectively. Adding the two numbers gives 1010.
9. First, I convert the signed integers -104 and -100 to binary which gives me
1101000 and 11100100 respectively then their first compliments is 00010111
and 00011011 respectively. Adding the two last binary numbers gives
00110010
10. Here Instead of converting the binary numbers from question 9 above to
their 1st complement, I just went ahead and add them after converting them
from their integer form to binary form. -104 which is 11101000 and -100 is
11100100 and adding them gives me 11001100 with one excess which have
been excluded.
11. The drawbacks of sign-magnitude include;
• One of the bit patterns is wasted
• addition doesn't work the way we want it to.
The drawbacks of 1's complement notation include;
• It is not very simple to understand because it is very much different from
the conventional way of representing signed numbers.
• There are two ways of representing 0, which is inconvenient for the
computer.
• The further conversion of the binary to their 1st complement can be quite
tasking.</ol></p>
</body>
</html>
